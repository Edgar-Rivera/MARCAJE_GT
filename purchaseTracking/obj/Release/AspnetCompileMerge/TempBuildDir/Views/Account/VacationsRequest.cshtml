@model purchaseTracking.Models.Activities.RequestActivity
@using purchaseTracking.Models.Activities
@{
    ViewBag.Title = "Solicitud de Vacaciones";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    string ValorSolicitando = Session["nombre"].ToString();
}

<script>
    function onchangeP(seleccion) {
        alert(seleccion);
        if (seleccion == "86") {
            document.getElementById('permiso').style.display = "none";
        } else {
            document.getElementById('permiso').style.display = "block";

        }
    }
</script>
<script>
    $(document).ready(function () {
        function actualizarSolicitud() {
            var valorSeleccionado = $('#solicitudDropdown').val();
            var valorSeleccionado2 = $('#solicitudDropdown2').val();
            if (valorSeleccionado === "86") {
                $('#resultado').val('Solicitud de Vacaciones');
            }
            else if (valorSeleccionado === "89" && valorSeleccionado2 === "Home Office") {
                $('#resultado').val('Solicitud de Permiso - Home Office');
            }
            else if (valorSeleccionado === "89" && valorSeleccionado2 === "Enfermedad") {
                $('#resultado').val('Solicitud de Permiso - Enfermedad');
            }
            else if (valorSeleccionado === "89" && valorSeleccionado2 === "Permiso con Goce de Salario") {
                $('#resultado').val('Solicitud de Permiso - Permiso con Goce de Salario');
            }
            else if (valorSeleccionado === "89" && valorSeleccionado2 === "Permiso sin Goce de Salario") {
                $('#resultado').val('Solicitud de Permiso - Permiso sin Goce de Salario');
            }
            else if (valorSeleccionado === "89" && valorSeleccionado2 === "Goce por tiempo Remunerado") {
                $('#resultado').val('Solicitud de Permiso - Goce por tiempo Remunerado');
            }
            else if (valorSeleccionado === "89" && valorSeleccionado2 === "Matrimonio") {
                $('#resultado').val('Solicitud de Permiso - Matrimonio');
            }
            else if (valorSeleccionado === "89" && valorSeleccionado2 === "Nacimiento de Hijo") {
                $('#resultado').val('Solicitud de Permiso - Nacimiento de Hijo');
            }
            else if (valorSeleccionado === "89" && valorSeleccionado2 === "Fallecimiento de Familiar") {
                $('#resultado').val('Solicitud de Permiso - Fallecimiento de Familiar');
            }
        }
        $('#solicitudDropdown, #solicitudDropdown2').on('change', function () {
            $('#checkSolicitud').prop('checked', true);
            actualizarSolicitud();
        });
    });
</script>
<script type='text/javascript'>
    $(function () {
        $(".chosen").chosen();
    });
</script>
<script>
    function onchangeS(value) {
        var solicitudDropdown = document.getElementById("solicitudDropdown");
        var selectedText = solicitudDropdown.options[solicitudDropdown.selectedIndex].text;

        document.getElementById("selectedSolicitud").innerText = ("Fecha de inicio " + selectedText);
        document.getElementById("selectedSolicitud2").innerText = ("Fecha Fin " + selectedText);

    }
</script>
<div class="container-fluid">
    <div class="row justify-content-md-center">
        <div class="col-md-8 mt-3">
            <h4>Solicitud Disfrute de Vacaciones / Permisos</h4>
            <hr />
            @using (Html.BeginForm("newRequest", "Account", FormMethod.Post))
            {
                <div class="row d-none">
                    <div class="col-md-3">
                        <div class="mb-3 input-group">
                            @Html.EditorFor(model => model.Activity, new { htmlAttributes = new { @Value = "cn_Task", @class = "form-control", @maxlength = "100", @required = "required" } })
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-5">
                        <label for="solicitudDropdown" class="form-label fw-bold">Tipo de Solicitud</label>
                        @Html.DropDownListFor(model => Model.ActivityType, new List<SelectListItem>
                        {
                            new SelectListItem{ Text = "Seleccione Solicitud", Value = "0" },
                            new SelectListItem{ Text = "Solicitud Vacaciones", Value = "86" },
                            new SelectListItem{ Text = "Solicitud Permiso", Value = "89" },
                        }, new { @class = "form-select ", @id = "solicitudDropdown", @onchange = "onchangeP(this.value)" })
                    </div>

                    <div class="col-md-5" style="display:none" id="permiso" >
                            <label for="solicitudDropdown2" class="form-label fw-bold">Permiso especial por:</label>
                            @Html.DropDownListFor(model => Model.U_Observaciones, new List<SelectListItem>
                            {
                                new SelectListItem{ Text = "Home Office", Value = "Home Office" },
                                new SelectListItem{ Text = "Enfermedad", Value = "Enfermedad" },
                                new SelectListItem{ Text = "Permiso con Goce de Salario", Value = "Permiso con Goce de Salario" },
                                new SelectListItem{ Text = "Permiso sin Goce de Salario", Value = "Permiso sin Goce de Salario" },
                                new SelectListItem{ Text = "Goce por tiempo Remunerado", Value = "Goce por tiempo Remunerado" },
                                new SelectListItem{ Text = "Matrimonio", Value = "Matrimonio" },
                                new SelectListItem{ Text = "Nacimiento de Hijo", Value = "Nacimiento de Hijo" },
                                new SelectListItem{ Text = "Fallecimiento de Familiar", Value = "Fallecimiento de Familiar" },
                            }, new { @class = "form-select chosen", @id = "solicitudDropdown2" })
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-5">
                        <label for="HandledBy" class="form-label fw-bold">Jefe Inmediato:</label>
                        @{
                            List<HandledUsers> handled = new List<HandledUsers>();
                            handled = new purchaseTracking.Connection.Activities.DataActivities().getUsers();

                            @Html.DropDownListFor(model => Model.HandledBy, new SelectList(handled, "USERID", "U_NAME"),
                                new { @class = "form-select chosen", @id = "HandledBy" })
                        }
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-5">
                        <label for="U_Solicitante" class="form-label fw-bold">Solicitante</label>
                        @Html.EditorFor(model => model.U_Solicitante, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control",
                                @maxlength = "150",
                                @Value = ValorSolicitando,
                                @readonly = "readonly",
                                @required = "required"
                            }
                        })
                    </div>
                    <div class="col-md-5">
                        <label for="Details" class="form-label fw-bold">Asunto</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.Details, new
                            {
                                htmlAttributes = new
                                {
                                    @id = "resultado",
                                    @class = "form-control",
                                    @maxlength = "100",
                                    @required = "required",
                                    @readonly = "readonly"
                                }
                            })
                            <button class="btn btn-primary" type="button" id="checkSolicitud">
                                <i class="fas fa-comment"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <h5>Detalles de la Solicitud</h5>
                <hr>
                <div class="row mb-3">
                    <div class="col-md-5">
                        <label id="selectedSolicitud" class="form-label fw-bold">Fecha de Inicio</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.StartDate, new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control",
                                    @type = "date",
                                    @required = "required"
                                }
                            })
                        </div>
                    </div>
                    <div class="col-md-5">
                        <label id="selectedSolicitud2" class="form-label fw-bold">Fecha de Fin</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.U_FechaActualizacion, new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control",
                                    @type = "date",
                                    @required = "required"
                                }
                            })
                        </div>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-5">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="U_retrasoDias" id="medioDia">
                            <label class="form-check-label fw-bold" for="medioDia">Medio Día</label>
                        </div>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-10">
                        <label class="form-label fw-bold" for="Notes">Comentarios</label>
                        @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", @rows = 5, @maxlength = 1500, @id = "Notes" })
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-5">
                        <label class="form-label fw-bold" for="U_Correo">Envío email</label>
                        @Html.EditorFor(model => model.U_Correo, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "email", @multiple = "multiple", @id = "U_Correo" } })
                    </div>
                    <div class="col-md-5">
                        <label class="form-label fw-bold" for="Priority">Prioridad</label>
                        @Html.DropDownListFor(model => model.Priority, new List<SelectListItem>
                        {
                            new SelectListItem{ Text="Seleccione prioridad", Value = "pr_Normal" },
                            new SelectListItem{ Text="Alta", Value = "pr_High" },
                            new SelectListItem{ Text="Baja", Value = "pr_Low" },
                            new SelectListItem{ Text="Normal", Value = "pr_Normal" }
                        }, new { @class = "form-control", @id = "Priority" })
                    </div>
                </div>

                <button id="crearSolicitudBtn" type="submit" class="btn btn-success float-end">
                    Crear Solicitud
                </button>

            }
        </div>
    </div>
</div>

