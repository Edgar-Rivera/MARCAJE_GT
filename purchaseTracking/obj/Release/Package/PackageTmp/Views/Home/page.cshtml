@{
    ViewBag.Title = "EasyAccess - Isertec";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    purchaseTracking.Models.WEA.W_MARCAS_LOC_PROY data = new purchaseTracking.Models.WEA.W_MARCAS_LOC_PROY();
    data = new purchaseTracking.Connection.UserData.UserData().LASTWEA(Convert.ToInt32(Session["external_code"]));

    // LSITA CON VALORES ESTATICOS DE USUARIOS INFRAESTRUCTURA ** PV_27-01-2023
    List<string> user_values = new List<string> {"541", "16","165", "544", "589", "275", "151", "535", "36", "45", "534", "47", "41", "43", "536", "526", "531", "530", "540", "615", "605", "619", "515", "583" ,"593","302","667" };

}
<style>
    #unsafe ul li {
        padding-left: 0;
        padding: 0.75rem 1.25rem;
        border: 1px solid transparent;
        margin-bottom: 1rem;
        position: relative;
        list-style-type: none;
        color: #721c24;
        background-color: #f8d7da;
        border-color: #f5c6cb;
    }
</style>
<script src="~/Scripts/GetDataGeo.js"></script>
<script src="~/Scripts/device-uuid.js"></script>
<script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
<script type="text/javascript">
    function elementInspect()
    {
        if (document.getElementById('customer_n').style.display == 'none')
        {
            document.getElementById('customer_n').style.display = "block";
            document.getElementById('customer').style.display = "none";
        } else {
            document.getElementById('customer_n').style.display = "none";
            document.getElementById('customer').style.display = "block";
        }
    }

    $(function () {
        $(".chosen").chosen();
    });
    function onchangeC(seleccion, desplegable, texto) {
        if (seleccion != "") {
            document.getElementById(desplegable).value = seleccion;
            document.getElementById('CardName').value = texto;
        } else {
            document.getElementById(desplegable).value = "";
        }
    }
    function onchangeCN(seleccion, desplegable, texto) {
        if (seleccion != "") {
            document.getElementById(desplegable).value = seleccion;
            document.getElementById('CardNameN').value = texto;
        } else {
            document.getElementById(desplegable).value = "";
        }
    }
     $(function () {
        $("#carname").change(function () {
            var val = $(this).val();
            var subItems="";
            $.getJSON("@Url.Action("GetSubCard","Request")", {cardCode:val} ,function (data) {
              $.each(data,function(index,item){
                subItems+="<option value='"+item.Value+"'>"+item.Text+"</option>"
              });
                $("#DocNumForm").html(subItems)
            });
        });
    });


    $(function () {
        $("#carcode").change(function () {
            var val = $(this).val();
            var subItems="";
            $.getJSON("@Url.Action("GetSub","Request")", {cardCode:val} ,function (data) {
              $.each(data,function(index,item){
                subItems+="<option value='"+item.Value+"'>"+item.Text+"</option>"
              });
                $("#DocNumForm").html(subItems)
            });
        });
    });

    function actualizarHora() {
            // Obtener el elemento HTML donde se mostrará la hora
            var horaElemento = document.getElementById("hora");

            // Realizar una solicitud AJAX para obtener la hora actualizada del servidor
            $.get("@Url.Action("ObtenerHora", "Home")", function (nuevaHora) {
                // Actualizar el contenido del elemento con la nueva hora
                horaElemento.innerHTML = nuevaHora;
            });
        }

        // Actualizar la hora cada segundo
        setInterval(actualizarHora, 1000);

</script>
<h4 class="text-center">Bienvenido @Session["nombre"]</h4>
<h6 class="text-center text-muted">@Session["eMail"]</h6>
<h4 class="text-center"  id="hora"></h4>
<br />
@{
    string pidForm1 = "";
    string pidForm2 = "";
    string pidFormD = "";
    string pidFormD1 = "";
    pidForm1 = data.ORDEN != "" || data.CODIGO == 0 ? "active" : "";
    pidForm2 = data.ORDEN == "" ? "active" : "";
    pidFormD = pidForm1 == "active" ? "show active" : "";
    pidFormD1 = pidForm2 == "active" ? "show active" : "";


}
<div class="container-fluid">
    <div class="row justify-content-md-center">
        <div class="col-md-8">
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item">
                    <a class="nav-link @pidForm1" id="home-tab" data-toggle="tab" href="#general" role="tab" aria-controls="general" aria-selected="true">Marcas Proyectos</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @pidForm2" id="profile-tab" data-toggle="tab" href="#contenido" role="tab" aria-controls="contenido" aria-selected="false">Marcas Comercial</a>
                </li>
            </ul>
            <div class="tab-content" id="myTabContent">
                <div class="tab-pane fade @pidFormD" id="general" role="tabpanel" aria-labelledby="home-tab">
                    <br />


                    <p id="setflag" class="btn btn-success btn-sm"></p>

                    <h3 class="float-right">
                        <a target="_blank" id="enlace" href="#" class="badge badge-primary"><i class="fas fa-map-marked-alt"></i> </a>
                    </h3>


                    <div style="display:none">
                        <strong>Latitud: </strong>
                        <p id="latitud"></p>
                        <br>
                        <strong>Longitud: </strong>
                        <p id="longitud"></p>
                        <br>
                    </div>
                    @using (Html.BeginForm("page", "Home", FormMethod.Post, new { id = "setterForm" }))
                    {
                        if ((data.CODIGO == 0 || data.TIPO == "SALIDA" || data.TIPO == "FIN TRASLADO") || (!string.IsNullOrEmpty(data.ORDEN) && data.TIPO == "SALIDA"))
                        {


                            <div class="form-group">
                                <label>Órden de Venta</label>
                                @{
                                    List<purchaseTracking.Models.Orders.BusinessPartners> sn = new List<purchaseTracking.Models.Orders.BusinessPartners>();
                                    if (user_values.Contains(Session["external_code"].ToString()))
                                    {

                                        sn = new purchaseTracking.Connection.Orders.BusinessSN().getListProgramacion(Convert.ToInt32(Session["code"].ToString()));
                                    }
                                    else
                                    {
                                        sn = new purchaseTracking.Connection.Orders.BusinessSN().getList();
                                    }
                                    // Code behind user handled


                                    @Html.DropDownList("ORDR", new SelectList(sn, "CardCode", "CardName"),
                                 new { @id = "carcode", @class = "form-control chosen", @onchange = "onchangeC(this.value,'card',this.options[this.selectedIndex].innerHTML)" })
                                }
                            </div>
                            <div class="form-group">
                                <label class="control-label">Socio de Negocios</label>
                                @Html.DropDownList("CardName", new List<SelectListItem>
                               {
                              new SelectListItem{ Text="Socio de Negocios", Value = "0" } }, new { @id = "DocNumForm", @class = "form-control", @onclick = "onchangeE(this.value,'entry')" })
                            </div>
                        }
                        else
                        {
                            if (!string.IsNullOrEmpty(data.ORDEN))
                            {
                                <div class="alert alert-primary" role="alert">
                                    Última marca Registrada: <b>@string.Concat(data.TIPO, " - ", data.MARCA) </b>
                                </div>
                                <div class="form-group">
                                    <label class="control-label">Órden de Venta</label>
                                    @Html.Hidden("ORDR", data.ORDEN)
                                    <input class="form-control" value="@string.Concat(data.ORDEN," - ",data.NOM_PROJECT)" readonly />
                                </div>
                                <div class="form-group">
                                    <label class="control-label">Socio de Negocios</label>
                                    @Html.Hidden("CardName", data.CLIENTE)
                                    <input class="form-control" value="@data.NOM_CLIENTE" readonly />
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-primary" role="alert">
                                    Última marca Registrada de Tipo Comercial : <b>@string.Concat(data.TIPO, " - ", data.MARCA) </b>
                                </div>
                            }
                        }
                        if ((data.CODIGO == 0 || data.TIPO == "SALIDA" || data.TIPO == "FIN TRASLADO") || (!string.IsNullOrEmpty(data.ORDEN) && data.TIPO == "SALIDA"))
                        {
                            <div class="form-row">
                                <br />
                                <div class="col-md-10">
                                    <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                        <label class="btn btn-secondary btn-sm active">
                                            <input type="radio" name="TYPE_V" id="option1" value="P" autocomplete="off" checked> VISITA PRESENCIAL
                                        </label>
                                        <label class="btn btn-secondary btn-sm">
                                            <input type="radio" name="TYPE_V" id="option2" value="V" autocomplete="off"> VISITA VIRTUAL
                                        </label>
                                    </div>
                                </div>
                            </div><br />
                        }
                        else
                        {

                            @Html.Hidden("TYPE_V", data.TIPO_V);
                            if ((!string.IsNullOrEmpty(data.ORDEN) && data.TIPO == "SALIDA"))
                            {
                                if ((data.TIPO_V == "P"))
                                {
                                    <fieldset disabled>
                                        <div class="form-row">
                                            <div class="col-md-10">
                                                <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                                    <label class="btn btn-info btn-sm active">
                                                        <input type="radio" name="TYPE_V" id="option1" value="P" autocomplete="off" checked> PRESENCIAL
                                                    </label>
                                                    <label class="btn btn-info btn-sm">
                                                        <input type="radio" name="TYPE_V" id="option2" value="V" autocomplete="off"> VIRTUAL
                                                    </label>
                                                </div>
                                            </div>
                                        </div><br />
                                    </fieldset>
                                }
                                else
                                {
                                    <fieldset disabled>
                                        <div class="form-row">
                                            <div class="col-md-10">
                                                <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                                    <label class="btn btn-info btn-sm active">
                                                        <input type="radio" name="TYPE_V" id="option1" value="P" autocomplete="off"> PRESENCIAL
                                                    </label>
                                                    <label class="btn btn-info btn-sm">
                                                        <input type="radio" name="TYPE_V" id="option2" value="V" autocomplete="off" checked> VIRTUAL
                                                    </label>
                                                </div>
                                            </div>
                                        </div><br />
                                    </fieldset>
                                }
                            }
                        }
                        <div class="form-group row" style="display:none">
                            <div class="col-md-10">
                                <input class="form-control" name="lt" id="lt">
                                <br>
                                <input class="form-control" name="lg" id="lg">
                                <br>
                                <input class="form-control" name="uuid" id="uuid">
                                <br>
                            </div>
                        </div>
                        if ((!string.IsNullOrEmpty(data.ORDEN)))
                        {
                            <div class="row justify-content-center">
                                <div class="col-md-6">
                                    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger text-center" })
                                </div>
                            </div>
                        }
                        if ((data.CODIGO == 0 || data.TIPO == "SALIDA" || data.TIPO == "FIN TRASLADO") || (!string.IsNullOrEmpty(data.ORDEN) && data.TIPO == "SALIDA"))
                        {
                            <button type="submit" name="type_p" value="INICIO" class="btn btn-primary">ENTRADA</button>
                            <button type="submit" name="type_p" value="INICIO_TRASLADO" class="btn btn-success">INICIO TRASLADO</button>
                            <br />
                            <br />
                        }
                        else if ((data.TIPO == "ENTRADA") && (!string.IsNullOrEmpty(data.ORDEN)))
                        {
                            <button type="submit" name="type_p" value="INICIO_COMIDA" class="btn btn-success">INICIO COMIDA</button>
                            <button type="submit" name="type_p" value="SALIDA" class="btn btn-danger">SALIDA</button>
                            <br />
                            <br />
                        }
                        else if ((data.TIPO == "INICIO TRASLADO") || (!string.IsNullOrEmpty(data.ORDEN) && data.TIPO == "SALIDA"))
                        {
                            <button type="submit" name="type_p" value="FIN_TRASLADO" class="btn btn-danger">FIN TRASLADO</button>
                            <br />
                            <br />
                        }
                        else if ((data.TIPO == "INICIO COMIDA") || (!string.IsNullOrEmpty(data.ORDEN) && data.TIPO == "SALIDA"))
                        {
                            <button type="submit" name="type_p" value="FIN_COMIDA" class="btn btn-danger">FIN COMIDA</button>
                            <br />
                            <br />
                        }
                        else if ((data.TIPO == "FIN COMIDA") || (!string.IsNullOrEmpty(data.ORDEN) && data.TIPO == "SALIDA"))
                        {
                            <button type="submit" name="type_p" value="INICIO_COMIDA" class="btn btn-success">INICIO COMIDA</button>
                            <button type="submit" name="type_p" value="SALIDA" class="btn btn-danger">SALIDA</button>
                            <br />
                            <br />
                        }
                    }
                </div>
                <div class="tab-pane fade @pidFormD1" id="contenido" role="tabpanel" aria-labelledby="profile-tab">
                    <br />
                    <p id="setflag_c" class="btn btn-success btn-sm"></p>
                    <h3 class="float-right">
                        <a target="_blank" id="enlace_c" href="#" class="badge badge-primary"><i class="fas fa-map-marked-alt"></i> </a>
                    </h3>
                    <br />
                    <br />

                    <div style="display:none">
                        <strong>Latitud: </strong>
                        <p id="latitud_c"></p>
                        <br>
                        <strong>Longitud: </strong>
                        <p id="longitud_c"></p>
                        <br>
                    </div>
                    @using (Html.BeginForm("page_c", "Home", FormMethod.Post, new { id = "setterForm" }))
                    {
                        <div class="form-group row" style="display:none">
                            <div class="col-md-10">
                                <input class="form-control" name="lt_c" id="lt_c">
                                <br>
                                <input class="form-control" name="lg_c" id="lg_c">
                                <br>
                                <input class="form-control" name="uuid_c" id="uuid_c">
                                <br>
                            </div>
                        </div>
                        if ((data.CODIGO == 0 || data.TIPO == "SALIDA") || (string.IsNullOrEmpty(data.ORDEN) && data.TIPO == "SALIDA" || data.TIPO == "FIN TRASLADO"))
                        {
                            <div id="customer" class="form-group" style="display:block">
                                <label>Nombre Cliente</label>
                                @{
                                    // Code behind user handled
                                    List<purchaseTracking.Models.Orders.BusinessPartners> sn = new List<purchaseTracking.Models.Orders.BusinessPartners>();
                                    sn = new purchaseTracking.Connection.Orders.BusinessSN().getListNames();

                                    @Html.DropDownList("CardCode", new SelectList(sn, "CardCode", "CardName"),
                                          new { @class = "form-control chosen" })


                                }
                            </div>


                            <div class="form-row">
                                <br />
                                <div class="col-md-4">
                                    <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                        <label class="btn btn-secondary btn-sm active">
                                            <input type="radio" name="TYPE_V" id="option1" value="P" autocomplete="off" checked> VISITA PRESENCIAL
                                        </label>
                                        <label class="btn btn-secondary btn-sm">
                                            <input type="radio" name="TYPE_V" id="option2" value="V" autocomplete="off"> VISITA VIRTUAL
                                        </label>
                                    </div>
                                </div>
                            </div><br />


                            <div class="form-row">
                                <br />
                                <div class="col-md-4">
                                    <button type="button" class="btn btn-info" onclick="elementInspect()">Cliente Nuevo Prospecto</button>
                                </div>
                            </div><br />


                            <div id="customer_n" class="form-group" style="display:none">
                                <label>Nombre Cliente Prospecto</label>
                                <input class="form-control" name="prospect" id="prospect">
                            </div>
                        }
                        else
                        {
                            if (string.IsNullOrEmpty(data.ORDEN))
                            {
                                <div class="alert alert-primary" role="alert">
                                    Última marca Registrada: <b>@string.Concat(data.TIPO, " - ", data.MARCA) </b>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-primary" role="alert">
                                    Última marca Registrada en Proyectos: <b>@string.Concat(data.TIPO, " - ", data.MARCA) </b>
                                </div>
                            }

                            @Html.Hidden("TYPE_V", data.TIPO_V);
                            if (!string.IsNullOrEmpty(data.PROSPECTO))
                            {
                                @Html.Hidden("CardCode", "S")
                                if ((string.IsNullOrEmpty(data.ORDEN)))
                                {
                                    <div class="form-group">
                                        <label class="control-label">Nombre Cliente Prospecto</label>
                                        @Html.Hidden("prospect", data.PROSPECTO)
                                        <input class="form-control" value="@data.PROSPECTO" readonly />
                                    </div>
                                }


                            }
                            else
                            {
                                if ((string.IsNullOrEmpty(data.ORDEN)))
                                {
                                    <div class="form-group">
                                        <label class="control-label">Socio de Negocios</label>
                                        @Html.Hidden("CardCode", data.CLIENTE)
                                        <input class="form-control" value="@data.NOM_CLIENTE" readonly />
                                    </div>
                                }
                            }

                        }
                        <div class="row justify-content-center">
                            <div class="col-md-6">
                                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger text-center" })
                            </div>
                        </div>
                        if ((data.CODIGO == 0 || data.TIPO == "SALIDA") || (string.IsNullOrEmpty(data.ORDEN) && data.TIPO == "SALIDA" || data.TIPO == "FIN TRASLADO"))
                        {
                            <button type="submit" name="type_p" value="INICIO" class="btn btn-primary">ENTRADA</button>
                            <br />
                            <br />
                        }
                        else if ((data.TIPO == "ENTRADA") && (string.IsNullOrEmpty(data.ORDEN)))
                        {
                            <button type="submit" name="type_p" value="SALIDA" class="btn btn-danger">SALIDA</button>
                            <br />
                            <br />
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>